#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Realm.GPA.GCS.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DNN7")]
	public partial class DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRealm_GPA_GCS_Carrier(Realm_GPA_GCS_Carrier instance);
    partial void UpdateRealm_GPA_GCS_Carrier(Realm_GPA_GCS_Carrier instance);
    partial void DeleteRealm_GPA_GCS_Carrier(Realm_GPA_GCS_Carrier instance);
    partial void InsertRealm_GPA_GCS_Port(Realm_GPA_GCS_Port instance);
    partial void UpdateRealm_GPA_GCS_Port(Realm_GPA_GCS_Port instance);
    partial void DeleteRealm_GPA_GCS_Port(Realm_GPA_GCS_Port instance);
    partial void InsertRealm_GPA_GCS_Region(Realm_GPA_GCS_Region instance);
    partial void UpdateRealm_GPA_GCS_Region(Realm_GPA_GCS_Region instance);
    partial void DeleteRealm_GPA_GCS_Region(Realm_GPA_GCS_Region instance);
    partial void InsertRealm_GPA_GCS_Services_Carrier(Realm_GPA_GCS_Services_Carrier instance);
    partial void UpdateRealm_GPA_GCS_Services_Carrier(Realm_GPA_GCS_Services_Carrier instance);
    partial void DeleteRealm_GPA_GCS_Services_Carrier(Realm_GPA_GCS_Services_Carrier instance);
    partial void InsertRealm_GPA_GCS_US_City(Realm_GPA_GCS_US_City instance);
    partial void UpdateRealm_GPA_GCS_US_City(Realm_GPA_GCS_US_City instance);
    partial void DeleteRealm_GPA_GCS_US_City(Realm_GPA_GCS_US_City instance);
    partial void InsertRealm_GPA_GCS_Services_Port(Realm_GPA_GCS_Services_Port instance);
    partial void UpdateRealm_GPA_GCS_Services_Port(Realm_GPA_GCS_Services_Port instance);
    partial void DeleteRealm_GPA_GCS_Services_Port(Realm_GPA_GCS_Services_Port instance);
    partial void InsertRealm_GPA_GCS_Service(Realm_GPA_GCS_Service instance);
    partial void UpdateRealm_GPA_GCS_Service(Realm_GPA_GCS_Service instance);
    partial void DeleteRealm_GPA_GCS_Service(Realm_GPA_GCS_Service instance);
    #endregion
		
		public DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiteSqlServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Realm_GPA_GCS_Carrier> Realm_GPA_GCS_Carriers
		{
			get
			{
				return this.GetTable<Realm_GPA_GCS_Carrier>();
			}
		}
		
		public System.Data.Linq.Table<Realm_GPA_GCS_Port> Realm_GPA_GCS_Ports
		{
			get
			{
				return this.GetTable<Realm_GPA_GCS_Port>();
			}
		}
		
		public System.Data.Linq.Table<Realm_GPA_GCS_Region> Realm_GPA_GCS_Regions
		{
			get
			{
				return this.GetTable<Realm_GPA_GCS_Region>();
			}
		}
		
		public System.Data.Linq.Table<Realm_GPA_GCS_Services_Carrier> Realm_GPA_GCS_Services_Carriers
		{
			get
			{
				return this.GetTable<Realm_GPA_GCS_Services_Carrier>();
			}
		}
		
		public System.Data.Linq.Table<Realm_GPA_GCS_US_City> Realm_GPA_GCS_US_Cities
		{
			get
			{
				return this.GetTable<Realm_GPA_GCS_US_City>();
			}
		}
		
		public System.Data.Linq.Table<Realm_GPA_GCS_Services_Port> Realm_GPA_GCS_Services_Ports
		{
			get
			{
				return this.GetTable<Realm_GPA_GCS_Services_Port>();
			}
		}
		
		public System.Data.Linq.Table<Realm_GPA_GCS_Service> Realm_GPA_GCS_Services
		{
			get
			{
				return this.GetTable<Realm_GPA_GCS_Service>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Realm.GPA.GCS.Carriers]")]
	public partial class Realm_GPA_GCS_Carrier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _website_url;
		
		private EntitySet<Realm_GPA_GCS_Services_Carrier> _Realm_GPA_GCS_Services_Carriers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onwebsite_urlChanging(string value);
    partial void Onwebsite_urlChanged();
    #endregion
		
		public Realm_GPA_GCS_Carrier()
		{
			this._Realm_GPA_GCS_Services_Carriers = new EntitySet<Realm_GPA_GCS_Services_Carrier>(new Action<Realm_GPA_GCS_Services_Carrier>(this.attach_Realm_GPA_GCS_Services_Carriers), new Action<Realm_GPA_GCS_Services_Carrier>(this.detach_Realm_GPA_GCS_Services_Carriers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website_url", DbType="NVarChar(250)")]
		public string website_url
		{
			get
			{
				return this._website_url;
			}
			set
			{
				if ((this._website_url != value))
				{
					this.Onwebsite_urlChanging(value);
					this.SendPropertyChanging();
					this._website_url = value;
					this.SendPropertyChanged("website_url");
					this.Onwebsite_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Carrier_Realm_GPA_GCS_Services_Carrier", Storage="_Realm_GPA_GCS_Services_Carriers", ThisKey="id", OtherKey="carrier_id")]
		public EntitySet<Realm_GPA_GCS_Services_Carrier> Realm_GPA_GCS_Services_Carriers
		{
			get
			{
				return this._Realm_GPA_GCS_Services_Carriers;
			}
			set
			{
				this._Realm_GPA_GCS_Services_Carriers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Realm_GPA_GCS_Services_Carriers(Realm_GPA_GCS_Services_Carrier entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Carrier = this;
		}
		
		private void detach_Realm_GPA_GCS_Services_Carriers(Realm_GPA_GCS_Services_Carrier entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Carrier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Realm.GPA.GCS.Ports]")]
	public partial class Realm_GPA_GCS_Port : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _region_id;
		
		private EntitySet<Realm_GPA_GCS_Services_Port> _Realm_GPA_GCS_Services_Ports;
		
		private EntityRef<Realm_GPA_GCS_Region> _Realm_GPA_GCS_Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onregion_idChanging(System.Nullable<int> value);
    partial void Onregion_idChanged();
    #endregion
		
		public Realm_GPA_GCS_Port()
		{
			this._Realm_GPA_GCS_Services_Ports = new EntitySet<Realm_GPA_GCS_Services_Port>(new Action<Realm_GPA_GCS_Services_Port>(this.attach_Realm_GPA_GCS_Services_Ports), new Action<Realm_GPA_GCS_Services_Port>(this.detach_Realm_GPA_GCS_Services_Ports));
			this._Realm_GPA_GCS_Region = default(EntityRef<Realm_GPA_GCS_Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="Int")]
		public System.Nullable<int> region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					if (this._Realm_GPA_GCS_Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onregion_idChanging(value);
					this.SendPropertyChanging();
					this._region_id = value;
					this.SendPropertyChanged("region_id");
					this.Onregion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Port_Realm_GPA_GCS_Services_Port", Storage="_Realm_GPA_GCS_Services_Ports", ThisKey="id", OtherKey="port_id")]
		public EntitySet<Realm_GPA_GCS_Services_Port> Realm_GPA_GCS_Services_Ports
		{
			get
			{
				return this._Realm_GPA_GCS_Services_Ports;
			}
			set
			{
				this._Realm_GPA_GCS_Services_Ports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Region_Realm_GPA_GCS_Port", Storage="_Realm_GPA_GCS_Region", ThisKey="region_id", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Realm_GPA_GCS_Region Realm_GPA_GCS_Region
		{
			get
			{
				return this._Realm_GPA_GCS_Region.Entity;
			}
			set
			{
				Realm_GPA_GCS_Region previousValue = this._Realm_GPA_GCS_Region.Entity;
				if (((previousValue != value) 
							|| (this._Realm_GPA_GCS_Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Realm_GPA_GCS_Region.Entity = null;
						previousValue.Realm_GPA_GCS_Ports.Remove(this);
					}
					this._Realm_GPA_GCS_Region.Entity = value;
					if ((value != null))
					{
						value.Realm_GPA_GCS_Ports.Add(this);
						this._region_id = value.id;
					}
					else
					{
						this._region_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Realm_GPA_GCS_Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Realm_GPA_GCS_Services_Ports(Realm_GPA_GCS_Services_Port entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Port = this;
		}
		
		private void detach_Realm_GPA_GCS_Services_Ports(Realm_GPA_GCS_Services_Port entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Port = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Realm.GPA.GCS.Regions]")]
	public partial class Realm_GPA_GCS_Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _x;
		
		private int _y;
		
		private int _radius;
		
		private bool _domestic;
		
		private EntitySet<Realm_GPA_GCS_Port> _Realm_GPA_GCS_Ports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnxChanging(int value);
    partial void OnxChanged();
    partial void OnyChanging(int value);
    partial void OnyChanged();
    partial void OnradiusChanging(int value);
    partial void OnradiusChanged();
    partial void OndomesticChanging(bool value);
    partial void OndomesticChanged();
    #endregion
		
		public Realm_GPA_GCS_Region()
		{
			this._Realm_GPA_GCS_Ports = new EntitySet<Realm_GPA_GCS_Port>(new Action<Realm_GPA_GCS_Port>(this.attach_Realm_GPA_GCS_Ports), new Action<Realm_GPA_GCS_Port>(this.detach_Realm_GPA_GCS_Ports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Int NOT NULL")]
		public int x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Int NOT NULL")]
		public int y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Int NOT NULL")]
		public int radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_domestic", DbType="Bit NOT NULL")]
		public bool domestic
		{
			get
			{
				return this._domestic;
			}
			set
			{
				if ((this._domestic != value))
				{
					this.OndomesticChanging(value);
					this.SendPropertyChanging();
					this._domestic = value;
					this.SendPropertyChanged("domestic");
					this.OndomesticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Region_Realm_GPA_GCS_Port", Storage="_Realm_GPA_GCS_Ports", ThisKey="id", OtherKey="region_id")]
		public EntitySet<Realm_GPA_GCS_Port> Realm_GPA_GCS_Ports
		{
			get
			{
				return this._Realm_GPA_GCS_Ports;
			}
			set
			{
				this._Realm_GPA_GCS_Ports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Realm_GPA_GCS_Ports(Realm_GPA_GCS_Port entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Region = this;
		}
		
		private void detach_Realm_GPA_GCS_Ports(Realm_GPA_GCS_Port entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Realm.GPA.GCS.Services_Carriers]")]
	public partial class Realm_GPA_GCS_Services_Carrier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _service_id;
		
		private int _carrier_id;
		
		private EntityRef<Realm_GPA_GCS_Carrier> _Realm_GPA_GCS_Carrier;
		
		private EntityRef<Realm_GPA_GCS_Service> _Realm_GPA_GCS_Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    partial void Oncarrier_idChanging(int value);
    partial void Oncarrier_idChanged();
    #endregion
		
		public Realm_GPA_GCS_Services_Carrier()
		{
			this._Realm_GPA_GCS_Carrier = default(EntityRef<Realm_GPA_GCS_Carrier>);
			this._Realm_GPA_GCS_Service = default(EntityRef<Realm_GPA_GCS_Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="Int NOT NULL")]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._Realm_GPA_GCS_Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carrier_id", DbType="Int NOT NULL")]
		public int carrier_id
		{
			get
			{
				return this._carrier_id;
			}
			set
			{
				if ((this._carrier_id != value))
				{
					if (this._Realm_GPA_GCS_Carrier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncarrier_idChanging(value);
					this.SendPropertyChanging();
					this._carrier_id = value;
					this.SendPropertyChanged("carrier_id");
					this.Oncarrier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Carrier_Realm_GPA_GCS_Services_Carrier", Storage="_Realm_GPA_GCS_Carrier", ThisKey="carrier_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Realm_GPA_GCS_Carrier Realm_GPA_GCS_Carrier
		{
			get
			{
				return this._Realm_GPA_GCS_Carrier.Entity;
			}
			set
			{
				Realm_GPA_GCS_Carrier previousValue = this._Realm_GPA_GCS_Carrier.Entity;
				if (((previousValue != value) 
							|| (this._Realm_GPA_GCS_Carrier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Realm_GPA_GCS_Carrier.Entity = null;
						previousValue.Realm_GPA_GCS_Services_Carriers.Remove(this);
					}
					this._Realm_GPA_GCS_Carrier.Entity = value;
					if ((value != null))
					{
						value.Realm_GPA_GCS_Services_Carriers.Add(this);
						this._carrier_id = value.id;
					}
					else
					{
						this._carrier_id = default(int);
					}
					this.SendPropertyChanged("Realm_GPA_GCS_Carrier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Service_Realm_GPA_GCS_Services_Carrier", Storage="_Realm_GPA_GCS_Service", ThisKey="service_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Realm_GPA_GCS_Service Realm_GPA_GCS_Service
		{
			get
			{
				return this._Realm_GPA_GCS_Service.Entity;
			}
			set
			{
				Realm_GPA_GCS_Service previousValue = this._Realm_GPA_GCS_Service.Entity;
				if (((previousValue != value) 
							|| (this._Realm_GPA_GCS_Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Realm_GPA_GCS_Service.Entity = null;
						previousValue.Realm_GPA_GCS_Services_Carriers.Remove(this);
					}
					this._Realm_GPA_GCS_Service.Entity = value;
					if ((value != null))
					{
						value.Realm_GPA_GCS_Services_Carriers.Add(this);
						this._service_id = value.id;
					}
					else
					{
						this._service_id = default(int);
					}
					this.SendPropertyChanged("Realm_GPA_GCS_Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Realm.GPA.GCS.US_Cities]")]
	public partial class Realm_GPA_GCS_US_City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _rail_time_to;
		
		private int _rail_time_from;
		
		private int _truck_time_to;
		
		private int _truck_time_from;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onrail_time_toChanging(int value);
    partial void Onrail_time_toChanged();
    partial void Onrail_time_fromChanging(int value);
    partial void Onrail_time_fromChanged();
    partial void Ontruck_time_toChanging(int value);
    partial void Ontruck_time_toChanged();
    partial void Ontruck_time_fromChanging(int value);
    partial void Ontruck_time_fromChanged();
    #endregion
		
		public Realm_GPA_GCS_US_City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rail_time_to", DbType="Int NOT NULL")]
		public int rail_time_to
		{
			get
			{
				return this._rail_time_to;
			}
			set
			{
				if ((this._rail_time_to != value))
				{
					this.Onrail_time_toChanging(value);
					this.SendPropertyChanging();
					this._rail_time_to = value;
					this.SendPropertyChanged("rail_time_to");
					this.Onrail_time_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rail_time_from", DbType="Int NOT NULL")]
		public int rail_time_from
		{
			get
			{
				return this._rail_time_from;
			}
			set
			{
				if ((this._rail_time_from != value))
				{
					this.Onrail_time_fromChanging(value);
					this.SendPropertyChanging();
					this._rail_time_from = value;
					this.SendPropertyChanged("rail_time_from");
					this.Onrail_time_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_truck_time_to", DbType="Int NOT NULL")]
		public int truck_time_to
		{
			get
			{
				return this._truck_time_to;
			}
			set
			{
				if ((this._truck_time_to != value))
				{
					this.Ontruck_time_toChanging(value);
					this.SendPropertyChanging();
					this._truck_time_to = value;
					this.SendPropertyChanged("truck_time_to");
					this.Ontruck_time_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_truck_time_from", DbType="Int NOT NULL")]
		public int truck_time_from
		{
			get
			{
				return this._truck_time_from;
			}
			set
			{
				if ((this._truck_time_from != value))
				{
					this.Ontruck_time_fromChanging(value);
					this.SendPropertyChanging();
					this._truck_time_from = value;
					this.SendPropertyChanged("truck_time_from");
					this.Ontruck_time_fromChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Realm.GPA.GCS.Services_Ports]")]
	public partial class Realm_GPA_GCS_Services_Port : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _service_id;
		
		private int _port_id;
		
		private System.Nullable<int> _days_to;
		
		private System.Nullable<int> _days_from;
		
		private EntityRef<Realm_GPA_GCS_Port> _Realm_GPA_GCS_Port;
		
		private EntityRef<Realm_GPA_GCS_Service> _Realm_GPA_GCS_Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    partial void Onport_idChanging(int value);
    partial void Onport_idChanged();
    partial void Ondays_toChanging(System.Nullable<int> value);
    partial void Ondays_toChanged();
    partial void Ondays_fromChanging(System.Nullable<int> value);
    partial void Ondays_fromChanged();
    #endregion
		
		public Realm_GPA_GCS_Services_Port()
		{
			this._Realm_GPA_GCS_Port = default(EntityRef<Realm_GPA_GCS_Port>);
			this._Realm_GPA_GCS_Service = default(EntityRef<Realm_GPA_GCS_Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="Int NOT NULL")]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._Realm_GPA_GCS_Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port_id", DbType="Int NOT NULL")]
		public int port_id
		{
			get
			{
				return this._port_id;
			}
			set
			{
				if ((this._port_id != value))
				{
					if (this._Realm_GPA_GCS_Port.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onport_idChanging(value);
					this.SendPropertyChanging();
					this._port_id = value;
					this.SendPropertyChanged("port_id");
					this.Onport_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_days_to", DbType="Int")]
		public System.Nullable<int> days_to
		{
			get
			{
				return this._days_to;
			}
			set
			{
				if ((this._days_to != value))
				{
					this.Ondays_toChanging(value);
					this.SendPropertyChanging();
					this._days_to = value;
					this.SendPropertyChanged("days_to");
					this.Ondays_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_days_from", DbType="Int")]
		public System.Nullable<int> days_from
		{
			get
			{
				return this._days_from;
			}
			set
			{
				if ((this._days_from != value))
				{
					this.Ondays_fromChanging(value);
					this.SendPropertyChanging();
					this._days_from = value;
					this.SendPropertyChanged("days_from");
					this.Ondays_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Port_Realm_GPA_GCS_Services_Port", Storage="_Realm_GPA_GCS_Port", ThisKey="port_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Realm_GPA_GCS_Port Realm_GPA_GCS_Port
		{
			get
			{
				return this._Realm_GPA_GCS_Port.Entity;
			}
			set
			{
				Realm_GPA_GCS_Port previousValue = this._Realm_GPA_GCS_Port.Entity;
				if (((previousValue != value) 
							|| (this._Realm_GPA_GCS_Port.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Realm_GPA_GCS_Port.Entity = null;
						previousValue.Realm_GPA_GCS_Services_Ports.Remove(this);
					}
					this._Realm_GPA_GCS_Port.Entity = value;
					if ((value != null))
					{
						value.Realm_GPA_GCS_Services_Ports.Add(this);
						this._port_id = value.id;
					}
					else
					{
						this._port_id = default(int);
					}
					this.SendPropertyChanged("Realm_GPA_GCS_Port");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Service_Realm_GPA_GCS_Services_Port", Storage="_Realm_GPA_GCS_Service", ThisKey="service_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Realm_GPA_GCS_Service Realm_GPA_GCS_Service
		{
			get
			{
				return this._Realm_GPA_GCS_Service.Entity;
			}
			set
			{
				Realm_GPA_GCS_Service previousValue = this._Realm_GPA_GCS_Service.Entity;
				if (((previousValue != value) 
							|| (this._Realm_GPA_GCS_Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Realm_GPA_GCS_Service.Entity = null;
						previousValue.Realm_GPA_GCS_Services_Ports.Remove(this);
					}
					this._Realm_GPA_GCS_Service.Entity = value;
					if ((value != null))
					{
						value.Realm_GPA_GCS_Services_Ports.Add(this);
						this._service_id = value.id;
					}
					else
					{
						this._service_id = default(int);
					}
					this.SendPropertyChanged("Realm_GPA_GCS_Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Realm.GPA.GCS.Services]")]
	public partial class Realm_GPA_GCS_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private int _turnaround_days;
		
		private string _frequency;
		
		private int _number_of_vessels;
		
		private int _avg_capacity;
		
		private string _image_url;
		
		private EntitySet<Realm_GPA_GCS_Services_Carrier> _Realm_GPA_GCS_Services_Carriers;
		
		private EntitySet<Realm_GPA_GCS_Services_Port> _Realm_GPA_GCS_Services_Ports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onturnaround_daysChanging(int value);
    partial void Onturnaround_daysChanged();
    partial void OnfrequencyChanging(string value);
    partial void OnfrequencyChanged();
    partial void Onnumber_of_vesselsChanging(int value);
    partial void Onnumber_of_vesselsChanged();
    partial void Onavg_capacityChanging(int value);
    partial void Onavg_capacityChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    #endregion
		
		public Realm_GPA_GCS_Service()
		{
			this._Realm_GPA_GCS_Services_Carriers = new EntitySet<Realm_GPA_GCS_Services_Carrier>(new Action<Realm_GPA_GCS_Services_Carrier>(this.attach_Realm_GPA_GCS_Services_Carriers), new Action<Realm_GPA_GCS_Services_Carrier>(this.detach_Realm_GPA_GCS_Services_Carriers));
			this._Realm_GPA_GCS_Services_Ports = new EntitySet<Realm_GPA_GCS_Services_Port>(new Action<Realm_GPA_GCS_Services_Port>(this.attach_Realm_GPA_GCS_Services_Ports), new Action<Realm_GPA_GCS_Services_Port>(this.detach_Realm_GPA_GCS_Services_Ports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_turnaround_days", DbType="Int NOT NULL")]
		public int turnaround_days
		{
			get
			{
				return this._turnaround_days;
			}
			set
			{
				if ((this._turnaround_days != value))
				{
					this.Onturnaround_daysChanging(value);
					this.SendPropertyChanging();
					this._turnaround_days = value;
					this.SendPropertyChanged("turnaround_days");
					this.Onturnaround_daysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frequency", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string frequency
		{
			get
			{
				return this._frequency;
			}
			set
			{
				if ((this._frequency != value))
				{
					this.OnfrequencyChanging(value);
					this.SendPropertyChanging();
					this._frequency = value;
					this.SendPropertyChanged("frequency");
					this.OnfrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number_of_vessels", DbType="Int NOT NULL")]
		public int number_of_vessels
		{
			get
			{
				return this._number_of_vessels;
			}
			set
			{
				if ((this._number_of_vessels != value))
				{
					this.Onnumber_of_vesselsChanging(value);
					this.SendPropertyChanging();
					this._number_of_vessels = value;
					this.SendPropertyChanged("number_of_vessels");
					this.Onnumber_of_vesselsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avg_capacity", DbType="Int NOT NULL")]
		public int avg_capacity
		{
			get
			{
				return this._avg_capacity;
			}
			set
			{
				if ((this._avg_capacity != value))
				{
					this.Onavg_capacityChanging(value);
					this.SendPropertyChanging();
					this._avg_capacity = value;
					this.SendPropertyChanged("avg_capacity");
					this.Onavg_capacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_url", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Service_Realm_GPA_GCS_Services_Carrier", Storage="_Realm_GPA_GCS_Services_Carriers", ThisKey="id", OtherKey="service_id")]
		public EntitySet<Realm_GPA_GCS_Services_Carrier> Realm_GPA_GCS_Services_Carriers
		{
			get
			{
				return this._Realm_GPA_GCS_Services_Carriers;
			}
			set
			{
				this._Realm_GPA_GCS_Services_Carriers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realm_GPA_GCS_Service_Realm_GPA_GCS_Services_Port", Storage="_Realm_GPA_GCS_Services_Ports", ThisKey="id", OtherKey="service_id")]
		public EntitySet<Realm_GPA_GCS_Services_Port> Realm_GPA_GCS_Services_Ports
		{
			get
			{
				return this._Realm_GPA_GCS_Services_Ports;
			}
			set
			{
				this._Realm_GPA_GCS_Services_Ports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Realm_GPA_GCS_Services_Carriers(Realm_GPA_GCS_Services_Carrier entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Service = this;
		}
		
		private void detach_Realm_GPA_GCS_Services_Carriers(Realm_GPA_GCS_Services_Carrier entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Service = null;
		}
		
		private void attach_Realm_GPA_GCS_Services_Ports(Realm_GPA_GCS_Services_Port entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Service = this;
		}
		
		private void detach_Realm_GPA_GCS_Services_Ports(Realm_GPA_GCS_Services_Port entity)
		{
			this.SendPropertyChanging();
			entity.Realm_GPA_GCS_Service = null;
		}
	}
}
#pragma warning restore 1591
